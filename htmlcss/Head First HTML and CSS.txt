1 认识HTML
    HTML：hypertext markup language

    1.1 head和body
        <!doctype html>
        <html lang="en">
            <head>
                通过首部告诉浏览器关于web页面的信息
            </head>
            <body>
                页面主体，也是浏览器中看到的部分
            </body>
        </html>

    1.2 元素剖析
        1）元素 = 开始标记 + 内容 + 结束标记
        2）属性：提供元素的附加信息

    1.3 HTML和CSS
        HTML：负责内容和结构
        CSS： 负责样式（表现）

2 深入了解超文本
    2.1 超文本
        1）也就是HTML中的HT（hypertext）, 使用超链接的方法将不同空间的信息组织在一起
        2）使用<a>创建超文本链接，href属性告诉浏览器链接的目标文件
        3）href的含义是超文本引用，hypertext reference(h-ref)

    2.2 文件路径
        1）/表示根目录
        2）..表示上级目录

3 构建模块
    3.1 页面规划
        草图->略图（块元素）->完整html
    
    3.2 <q>和<blockquote>
        q:用于短引用，内联元素
        blockquote：用于长引用，块元素

    3.3 构建模块    
        先构建块元素->再完善内联元素
    
    3.4 void元素
        1）没有内容的元素
        2）可以简写，也就是没有结束标记，如<br>,<img>

    3.5 HTML 列表
        ol: ordered list
        ul: unordered list
        li: list item

    3.6 元素嵌套
    3.7 字符实体，在HTML中输出特殊字符, 如 &amp; &gt; &lt;

4 连接起来
    4.1 托管
    4.2 域名
        URL：uniform resource locator,统一资源定位符
    4.3 HTTP
        超文本传输协议， hypertext transfer protocol

    4.4 绝对路径
        1）从根目录到达某个文件的路径
        2）浏览器会把相对链接转为绝对路径，所以访问web服务器的都是绝对路径
        3）web请求一个目录时，会查找该目录下的默认文件名为index的文件

    4.5 <a>元素
        1）使用URL链接到其他网站，同一网站的页面则使用相对路径
        2）title属性，提供链接信息
        3）使用id链接到其它元素，<a href="#id">
        4）target告诉浏览器要打开的窗口名，值为_blank则总是打开一个新窗口
    
5 为你的页面增加图像
    5.1 jpeg,png和gif
        1) jpeg
            ①最适合连续色调图像，如照片
            ②包含多大1600万中颜色
            ③有损格式
            ④不支持透明
            ⑤文件比较小
            ⑥不支持动画
        2) png 
            ①最适合单色图像和线条构成的图像（logo和文本图片）
            ②png-8(256种颜色), png-24, png-32
            ③无损格式
            ④支持多种颜色的透明
            ⑤比jpeg大，和GIF比则看颜色数量，一般png压缩稍稍优于gif
            ⑥不支持动画
        3) gif 
            ①最适合单色图像和线条构成的图像（logo和文本图片）
            ②支持最多256中颜色
            ③无损格式
            ④只允许一种颜色透明
            ⑤比jpeg大
            ⑥支持动画
        
    5.2 <img>元素， 内联元素
        1）src链接
        2）alt属性，如图像未显示，则使用alt属性的值来取代，是图像有意义的描述
        3）width和height(一般不用来调整图片大小，因为浏览器在缩放图像使之适应页面大小之前，仍然需要获取整个大图片)
        4）使用图片编辑器调整图像大小
        5）链接到图像<a href="" title=""><img src="" alt=""></a>
        6）使用缩略图

    5.3 图片编辑
        1）背景为棋盘表示透明
        2）使用蒙版反锯齿技术柔化文本边缘的颜色，避免文本周围出现光晕


6 标准及其他
    6.1 html简史
        html1.0~2.0->html3(浏览器战争)->html4(w3c创建html标准)->html4.01->xhtml(xml+html)->html5(2012)

    6.2 doctype指定文档类型
        告诉浏览器使用哪个html版本
    6.3 html新标准向后兼容
    6.4 w3c验证工具
        http://validator.w3.org
    6.5 <meta>指定编码
        1) charset="urf-8"
        2) 放到head中其他元素的前面，也就是第一个子元素
    6.6 html5有哪些改进
        1）增加了新元素和新属性
        2）增加新特性，允许开发人员用html5创建web应用
        3）html5规范比以前健壮
    

7 css入门
    7.1 规则 = 场所（选择器） + 属性 + 样式
    7.2 添加样式
        1）<style></style>
        2) <link type="text/css" rel="stylesheet" href="">

    7.3 选择器
        1) element {} 元素选择器
        2) element.classname {} 类选择器 （element为类里的元素，可选）
        3) element.id {} id选择器   （element为id里的元素，可选）
        4) 为多个元素添加编写一个规则，只需要在选择器之间加上逗号， 如h1,h2 {}
        5) 选择某个元素里的子元素，在元素之间加上空格
        6) a:visited 伪元素选择器
        7) 属性选择器，element[name="test"] {}

    7.4 样式继承（不是所有样式都可以继承）
    7.5 覆盖继承
            通过添加新的规则来覆盖继承

    7.6 样式应用顺序
        1）是否有选择器选择这个元素（如果选择器规则冲突，则使用最后列出的规则）
        2）是否继承
        3）使用默认值

    7.7 css验证工具 http://jigsaw.w3.org/css-validator/

8 增加字体和颜色样式
    8.1 字体系列
        1）serif （有衬线）
        2）sans-serif （没有衬线）
        3）monospace （包含固定宽度的字符）
        4）cursive （看似手写的字体）
        5）fantasy （某种风格的装饰性字体）

    8.2 web字体
        1）字体格式
            .ttf
            .otf
            .eot
            .svg
            .woff

        2）存放
            ①服务器
            ②托管服务（FontSquirrel, google）

        3）font-face属性 (内置的css规则)
            @font-face {
                font-family: "Emblema One";
                src: url("");
            }

        4）web字体缺点
            ①获取web字体需要花费一些时间
            ②维护字体文件
    
    8.3 调整字体大小
        1）像素px
        2）百分比%
        3）比例因子em
        4）关键字(small, medium, large)

        指定大小的秘诀：
            ①以关键字指定body字体的大小
            ②使用em或百分数，指定相对于body元素的其他元素

    8.4 web颜色
        1）构成：按颜色的红、绿、蓝三个分量所占数量来构成颜色
        
        2）指定颜色的方法
            ① 指定颜色名(不区分大小写)：blue
            ② 使用红蓝绿值指定颜色 rgb(80%,40%, 0%) or rgb(204, 102, 0); // 255*80%=204
            ③ 使用十六进制 #cc6600

        3）使用在线颜色表
            wn.wikipedia.org/wiki/web_colors

        4）颜色搭配秘诀
            对于本文和背景，要使用对比度最大的颜色


9 盒模型

    9.1盒模型
        内容区（包含元素的内容）
        内边距（可选，透明，但内容区的背景颜色会延伸到内边距，也没有装饰）
        边框  （可以有自己的样式）
        外边距（可选，透明没有颜色，也没有装饰）

    9.2 class和id
        class:多个元素使用某个样式
        id: 一个元素使用某个样式

    9.3 在css中使用id
        element#id {

        }

        id前加上元素，为了不同页面给不同元素定义了相同的id

    9.4 使用多个样式表
        1）顺序很重要，一个样式表会覆盖它上面链接的样式表中的样式
        2）要修改基础样式，应在基础样式表后面新增一个新的样式表，覆盖掉需要修改的样式

    9.5 面向不同的设备
        1) <link href="xxx.css" rel="stylesheet" media="screen and (max-device-width:480px)"> (如css文件相当庞大，建议使用link分割)
        2) 在css中增加媒体查询
            @media screen and (min-device-width: 481px) {

            }
            @media print {}


10 div与span

    10.1 逻辑区：页面上彼此相关的一组元素
        如果添加div有助于将页面分解为逻辑区，从而保证结构清晰并便于指定样式，那么可以增加更多的div(便于维护和应用样式)

    10.2 元素的宽度 = 内容区（属性width） + 左右内边距(padding) + 左右外边距(margin)
        1) 块元素的默认宽度是auto, 它会延伸占满可用的空间
        2) 指定宽度的方法
            ①按像素指定 px
            ②按百分比指定 % (计算元素所在容器的百分比，也就是父元素的百分比)

    10.3 子孙选择器
        父元素 子元素 {}

    
    10.4 简写
        1）padding: 上 右 下 左;
        2) margin: 上 右 下 左;
        3) border: border-width border-style border-color;(任意顺序)
        4) background: background-color background-image background-position;(任意顺序)
        5) font: font-style(可选) font-variant(可选) font-weight(可选) font-size/line-height font-family

    10.5 span
        span建立内联元素的逻辑分区
        内联元素只有左右边距，没有上下边距

    10.6 伪类
        a:link
        a:visited
        a:hover

    10.7 层叠
        给定一组样式表中的一组样式，浏览器就是以层叠方式来确定具体使用哪一个样式
        1）收集所有样式表
        2）找到所有匹配的声明
        3）对所有匹配的规则排序
        4）按特定性对所有声明排序
        5）对冲突的规则，按照他们在各自样式表中出现的顺序进行排序

    10.8 特定性（000）
        1) 0 这个选择器包含id吗？每个id加一分
        2) 0 这个选择器包含类或者伪类吗？每个类或伪类加一分
        3) 0 这个选择器包含元素名吗？一个元素名包含一分

        如： 
            ol li p {}  //003
            a:link {} //011

11 布局与定位
    11.1 页面布局的基础
        盒模型
        块元素
        内联元素

    11.2 使用流
        流实际上就是浏览器在页面上摆放HTML元素所用的方法，从HTML文件最上面的元素开始，从上到下沿着元素流逐个显示所遇到的各个元素
        1）遇到块元素则会换行
        2）遇到内联元素则在水平方向上显示，总体上会从左上方流向右下方, 并在垂直方向上扩展外围块元素来包含这些内联元素

    11.3 流和盒模型的外边距
        1）并排放置两个内联元素时，浏览器会在元素间创建足够的空间，考虑它们的外边距（除了图像，一般不设置内联元素的外边距）
        2）上下放置两个块元素时，浏览器会把它们共同的外边距折叠在一起。折叠的外边距高度就是最大的外边距高度（只要垂直放置就会这点，嵌套也一样）

    11.4 浮动元素
        1）float元素尽可能远的向左或向右（根据float的值）浮动一个元素。然后它下面的所有内容会绕流这个元素（所谓绕流，就是像流体一样绕着这个元素流动）

        2）如何浮动元素
            ①指定一个标识（选择器）
            ②要让这个元素在某个元素后面浮动，确保将浮动元素的HTML放在那个元素后面
            ③设置元素的宽度（width）
            ④设置float属性值

        3）浮动元素，该元素会从正常流中删除，所以其它的块元素会填充该元素原来的位置，但对内联元素定位时，它们会考虑浮动元素的边界，因此会围绕着浮动元素

        4）clear属性，用来指定一个块元素左边或者右边不能有浮动元素。设置了clear属性的块元素会下移，直到它旁边没有块元素

    11.5 两栏问题
        1) 右(左)浮动边栏
        2) 设置主内容的右(左)外边距（外边距等于边栏整体宽度）
        3) 解决浮动重叠问题：使用css clear属性
        4) 内联元素总会围绕着浮动元素，留意浮动元素的边界；而块元素会正常的流向页面

    11.6 流体与冻结设计
        流体布局，会随浏览器宽度调整而扩展，填满整个浏览器
        冻结布局，锁定元素，让它们冻结在页面上，这样这些元素就不会移动，就能避免由于窗口扩展带来的很多问题（设置width）
        凝胶布局，锁定内容区的宽度，但居中显示在浏览器中
            margin-left:auto;
            margin-right:auto;
            外边距为auto时，浏览器会确定正确的外边距是多少，另外还会确保左右外边距相同，所以内容会居中

    11.7 绝对定位
        1) 精确地定位元素
            ①使用position:absolute属性指定这个元素要绝对定位
            ①元素绝对定位时，浏览器首先要将它从流中完全删除
            ②然后将这个元素放置在top和right属性指定的位置上（也可以是left和bottom）
            ③流中的元素不会将其内联内容围绕在一个绝对定位元素周围，它们完全不知道页面上有这个绝对元素

        2）每个定位元素都有一个z-index属性，指定它在一个虚拟z轴上的位置

        3) position属性
            ① position的默认值是static(静态)。如果是静态定位，元素就会放在正常的文档流中，而不是由你来指定位置，要有浏览器来决定这些静态定位元素放在哪里。可以使用float属性将一个元素从流中取出，可以让这向左或向右浮动，但是最终还是由浏览器来确定它放在哪里。
            ② 使用position的absolute来使用绝对定位时，将由你来告诉浏览器究竟应该放在什么位置

        4) 相对于离它最近的父元素

    11.8 CSS表格
        CSS表格允许你在一个有行和列的表格中显示块元素

        1) 为整个表格创建一个div, 然后为每一行分别创建一个div， 对于每一列，只需要在行div中放置一个块元素

        2) 指定样式
            display:table;
            display:table-row;
            display:table-cell;

    11.9 css布局
        1) 浮动布局
        2) 凝胶布局
        3) 绝对布局
        4) 表格显示布局

    11.10 固定定位
        1) 指定距离浏览器窗口边界的一个偏移量，即使滚动页面也不会它也原地不动（固定元素不会移动）
        2) 负偏移量，是元素的左边定位在比视窗边界更左的位置（left:-90px;）

    11.11 4种定位
        静态定位：元素正常流入页面
        绝对定位：从正常流中取出该元素，相对于最近的父元素指定一个绝对位置
        固定定位：相对于浏览器窗口，把元素放在一个固定位置，不会移动
        相对定位：相对于其外围包含的元素来定位，元素仍在正常的页面流中

12 HTML5标记
    <header> //可以是任何部分的首部，而不只是页面首部，如大多数的section和article都会有一个header
    <footer> //类似header
    <nav>
    <section> //把相关内容组织在一起，如果把不相关的内容组织在一起用div
    <article> //独立的部分
    <aside>
    <time datetime=""> //如果元素内容没有采用官方日期/事件格式来写，就必须有datetime属性
    <video>

    12.1 video元素
        controls //视频控件是否出现
        autoplay //是否自动播放
        poster   //海报图像，视频未播放时显示的图像
        loop     //重新自动播放
        preload  //如何加载数据
        src
        width,height

    12.2 视频格式
        WebM容器
            Vp8视频编码
            Vorbis音频编码
        MP4容器
            H.264视频编码
            AAC音频编码
        Ogg容器
            Theora视频编码
            Vorbis音频编码

    12.3 source元素
        <source src="video/tweetsip.ogv" type='video/ogg; codecs="theora, vorbis""> 
        src: 容器
        type: 向浏览器提示文件类型
        codecs：指定使用哪个编码器

13 表格与更多表列
    <table>
        <tr>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </table>

    13.1 表格单元格间距   
        表格单元格没有外边距，它们只是在边框周围有间距，这个间距是为整个表格设置的。不能单独地控制各个表格单元格的边框间距

        border-space
        border-collapse //折叠边框

    13.2 跨行与跨列
        rowspan属性跨行
        colspan属性跨列

    13.3 <th>作为表头
    13.4 列表样式    

14 表单控件

    14.1 基本表单输入
        文本输入    <input type="text">
        单选按钮输入<input type="radio">
        复选框输入  <input type="checkbox">
        文本区      <textarea></textarea>
        下拉菜单    <select><option></option></select>
        提交输入    <submit>
        密码输入    <input type="password">
        文件输入    <input type="file">
    
    14.2 其它表单输入
        数字输入    <input type="number" min="0" max="100">
        范围输入    <input type="range"  min="0" max="20"  step="5"> //滑动条
        颜色输入    <input type="color">
        日期输入    <input type="date">
        email输入   <input type="email"> //移动设备才有效果
        tel输入     <input type="tel">   //移动设备才有效果
        url输入     <input type="url">   //移动设备才有效果
        

    14.3 GET 和 POST
    14.4 <label>
    14.5 表单中还有哪些元素
        
        <fieldset>  组织表单元素
        <legend>为这组input元素添加一个标签
        <input type="password">
        <input type="file">
        <select multiple> //多选菜单
        placeholder //提示输入内容
        required

    

html 元素
    <span>
    <div>
    <aside>
    <button>
    <a>
    <q>
    <blockquote>
    <p>
    <img>
    <em>
    <strong>
    <time>
    <ul>
    <ol>
    <li>
    <pre> 按输入的方式原样显示文本
    <code> 显示计算机程序代码
    <br>
    <del>
    <ins>
    <mark>
    <audio> //声音文件
    <progress>
    <meter> //某个范围的度量，如温度
    <vanvas> //在页面中显示用javascript绘制的图像和动画
    <figure> //定义图片，图表或代码清单
    <header>
    <footer>
    <nav>
    <section>
    <article>
    <aside>
    <time>
    <video>
    <caption> //提供表格额外信息，如定义表格标题
    <table>
        <tr>
        <th>
        <td>
    <fieldset>
    <legend>

属性
    placeholder 输入提示


选择器
    1) 元素选择器
    2) 子孙选择器
        div p {} div里的所有p元素
        div>p {} 父元素为div的所有p元素
    3) 类选择器
    4) id选择器
    5) 伪类选择器
        :link
        :visited
        :hover
        :active
        :focus
        :first-child
        :last-child
        :selected (li.selected)
        :nth-child(even)|:nth-child(odd)|:nth-child(2n) //兄弟元素，为表格隔行添加样式
        :first-letter
        :first-line
    6) 属性选择器 （根据元素属性来选择元素）
            img[width]
            img[height="300"]
            image[alt~="flowers"]

    7) 兄弟选择器
        h1+p {}

    
        

css 样式

    背景
        background-color
        background-image:url(images/background.gif); //url两边不需要加引号
            background-position:px|%|关键字（top,left,right,bottom,center）;设置图像位置，如top left表示图像放在元素的左上角
            background-repeat:no-repeat|repeat-x|repeat-y|inherit; //设置平铺行为

    文本和字体
        color
        font-family:Verdana, Geneva, Arial, sans-serif;(指定候选字体，最后再加上通用字体, 如sans-serif)
        font-style:italic(斜体风格，衬线有弯曲)|oblique(倾斜文本)
        font-size: 15px|small
        font-weight:lighter|normal|bold|bolder
        text-decoration:underline|overline|line-throuht|none (文本装饰；可以同时设置两个值，中间用空格隔开)
        line-height:normal(允许浏览器选择适当的行高)|px|%|em|1(纯数字，表示是自己字体的倍数);
        letter-spacing 字母之间设置间距
        list-style 设置列表项的外观
        
    对齐
        text-align:left|center|right; （会对块元素中的所有内联元素内容对齐，只能设置在块元素上，如果直接在内联元素上使用则不起作用）
        vertical-align:top|middle|bottom|text-top;(垂直对齐)

        
    盒模型
        width:px|%;
        padding 上 右 下 左
        margin:auto(自动居中)
        border
        border-radius:px|em; 边框圆角
        border-color
        border-width：5px|think|medium|thick;
        border-style:solid|dotted(虚线)|dashed(破折线)|double(双线)|groove(槽线)|inset(内凹)|outset(外凸)|ridge(脊线)
        border-bottom 控制元素下边框的外观
        border-bottom-style

    布局
        position:static(静态定位,默认值，有浏览器决定位置)|absolute(绝对定位，由你来决定位置)|fixed(固定定位，相对于浏览器窗口，而不是相对页面，永远不会移动)|relative(相对定位);
        display: talbe|tableRow|talbeCell|inline（内联显示）|block;
        float:left|right;
        clear:left|right|both; (当元素流入页面时，这个元素不允许有浮动内容) 

        left 指定元素左边位置
        top  指定元素顶部位置
        right
        bottom

    列表
        border-spacing:px|%|em;(表格边框间距)
        border-collapse:collapse //表格折叠边框
        list-style-type:none;(删除列表项的项目符号)|disc(默认)|circle(圆形标记)|square(方块标记)|decimal|upper-alpha|lower-alpha|upper-roman(大写罗马数字)|lower-roman
        list-style-image:url(xxx.gif) //定制列表标记
        list-style-position:inside(标记在列表项里)|outside（标记在列表项外面）
        

    其它
        caption-side:bottom; //把标题移到表格下面
