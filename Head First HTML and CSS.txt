1 认识HTML
    HTML：hypertext markup language

    1.1 head和body
        <!doctype html>
        <html lang="en">
            <head>
                通过首部告诉浏览器关于web页面的信息
            </head>
            <body>
                页面主体，也是浏览器中看到的部分
            </body>
        </html>

    1.2 元素剖析
        1）元素 = 开始标记 + 内容 + 结束标记
        2）属性：提供元素的附加信息

    1.3 HTML和CSS
        HTML：负责内容和结构
        CSS： 负责样式（表现）

2 深入了解超文本
    2.1 超文本
        1）也就是HTML中的HT（hypertext）, 使用超链接的方法将不同空间的信息组织在一起
        2）使用<a>创建超文本链接，href属性告诉浏览器链接的目标文件
        3）href的含义是超文本引用，hypertext reference(h-ref)

    2.2 文件路径
        1）/表示根目录
        2）..表示上级目录

3 构建模块
    3.1 页面规划
        草图->略图（块元素）->完整html
    
    3.2 <q>和<blockquote>
        q:用于短引用，内联元素
        blockquote：用于长引用，块元素

    3.3 构建模块    
        先构建块元素->再完善内联元素
    
    3.4 void元素
        1）没有内容的元素
        2）可以简写，也就是没有结束标记，如<br>,<img>

    3.5 HTML 列表
        ol: ordered list
        ul: unordered list
        li: list item

    3.6 元素嵌套
    3.7 字符实体，在HTML中输出特殊字符, 如 &amp; &gt; &lt;

4 连接起来
    4.1 托管
    4.2 域名
        URL：uniform resource locator,统一资源定位符
    4.3 HTTP
        超文本传输协议， hypertext transfer protocol

    4.4 绝对路径
        1）从根目录到达某个文件的路径
        2）浏览器会把相对链接转为绝对路径，所以访问web服务器的都是绝对路径
        3）web请求一个目录时，会查找该目录下的默认文件名为index的文件

    4.5 <a>元素
        1）使用URL链接到其他网站，同一网站的页面则使用相对路径
        2）title属性，提供链接信息
        3）使用id链接到其它元素，<a href="#id">
        4）target告诉浏览器要打开的窗口名，值为_blank则总是打开一个新窗口
    
5 为你的页面增加图像
    5.1 jpeg,png和gif
        1) jpeg
            ①最适合连续色调图像，如照片
            ②包含多大1600万中颜色
            ③有损格式
            ④不支持透明
            ⑤文件比较小
            ⑥不支持动画
        2) png 
            ①最适合单色图像和线条构成的图像（logo和文本图片）
            ②png-8(256种颜色), png-24, png-32
            ③无损格式
            ④支持多种颜色的透明
            ⑤比jpeg大，和GIF比则看颜色数量，一般png压缩稍稍优于gif
            ⑥不支持动画
        3) gif 
            ①最适合单色图像和线条构成的图像（logo和文本图片）
            ②支持最多256中颜色
            ③无损格式
            ④只允许一种颜色透明
            ⑤比jpeg大
            ⑥支持动画
        
    5.2 <img>元素， 内联元素
        1）src链接
        2）alt属性，如图像未显示，则使用alt属性的值来取代，是图像有意义的描述
        3）width和height(一般不用来调整图片大小，因为浏览器在缩放图像使之适应页面大小之前，仍然需要获取整个大图片)
        4）使用图片编辑器调整图像大小
        5）链接到图像<a href="" title=""><img src="" alt=""></a>
        6）使用缩略图

    5.3 图片编辑
        1）背景为棋盘表示透明
        2）使用蒙版反锯齿技术柔化文本边缘的颜色，避免文本周围出现光晕


6 标准及其他
    6.1 html简史
        html1.0~2.0->html3(浏览器战争)->html4(w3c创建html标准)->html4.01->xhtml(xml+html)->html5(2012)

    6.2 doctype指定文档类型
        告诉浏览器使用哪个html版本
    6.3 html新标准向后兼容
    6.4 w3c验证工具
        http://validator.w3.org
    6.5 <meta>指定编码
        1) charset="urf-8"
        2) 放到head中其他元素的前面，也就是第一个子元素
    6.6 html5有哪些改进
        1）增加了新元素和新属性
        2）增加新特性，允许开发人员用html5创建web应用
        3）html5规范比以前健壮
    

7 css入门
    7.1 规则 = 场所（选择器） + 属性 + 样式
    7.2 添加样式
        1）<style></style>
        2) <link type="text/css" rel="stylesheet" href="">

    7.3 选择器
        1) element {} 元素选择器
        2) element.classname {} 类选择器 （element为类里的元素，可选）
        3) element.id {} id选择器   （element为id里的元素，可选）
        4) 为多个元素添加编写一个规则，只需要在选择器之间加上逗号， 如h1,h2 {}
        5) 选择某个元素里的子元素，在元素之间加上空格
        6) a:visited 伪元素选择器
        7) 属性选择器，element[name="test"] {}

    7.4 样式继承（不是所有样式都可以继承）
    7.5 覆盖继承
            通过添加新的规则来覆盖继承

    7.6 样式应用顺序
        1）是否有选择器选择这个元素（如果选择器规则冲突，则使用最后列出的规则）
        2）是否继承
        3）使用默认值

    7.7 css验证工具 http://jigsaw.w3.org/css-validator/

8 增加字体和颜色样式
    8.1 字体系列
        1）serif （有衬线）
        2）sans-serif （没有衬线）
        3）monospace （包含固定宽度的字符）
        4）cursive （看似手写的字体）
        5）fantasy （某种风格的装饰性字体）

    8.2 web字体
        1）字体格式
            .ttf
            .otf
            .eot
            .svg
            .woff

        2）存放
            ①服务器
            ②托管服务（FontSquirrel, google）

        3）font-face属性 (内置的css规则)
            @font-face {
                font-family: "Emblema One";
                src: url("");
            }

        4）web字体缺点
            ①获取web字体需要花费一些时间
            ②维护字体文件
    
    8.3 调整字体大小
        1）像素px
        2）百分比%
        3）比例因子em
        4）关键字(small, medium, large)

        指定大小的秘诀：
            ①以关键字指定body字体的大小
            ②使用em或百分数，指定相对于body元素的其他元素

    8.4 web颜色
        1）构成：按颜色的红、绿、蓝三个分量所占数量来构成颜色
        
        2）指定颜色的方法
            ① 指定颜色名(不区分大小写)：blue
            ② 使用红蓝绿值指定颜色 rgb(80%,40%, 0%) or rgb(204, 102, 0); // 255*80%=204
            ③ 使用十六进制 #cc6600

        3）使用在线颜色表
            wn.wikipedia.org/wiki/web_colors

        4）颜色搭配秘诀
            对于本文和背景，要使用对比度最大的颜色


9 盒模型

    9.1盒模型
        内容区（包含元素的内容）
        内边距（可选，透明，但内容区的背景颜色会延伸到内边距，也没有装饰）
        边框  （可以有自己的样式）
        外边距（可选，透明没有颜色，也没有装饰）

    9.2 class和id
        class:多个元素使用某个样式
        id: 一个元素使用某个样式

    9.3 在css中使用id
        element#id {

        }

        id前加上元素，为了不同页面给不同元素定义了相同的id

    9.4 使用多个样式表
        1）顺序很重要，一个样式表会覆盖它上面链接的样式表中的样式
        2）要修改基础样式，应在基础样式表后面新增一个新的样式表，覆盖掉需要修改的样式

    9.5 面向不同的设备
        1) <link href="xxx.css" rel="stylesheet" media="screen and (max-device-width:480px)"> (如css文件相当庞大，建议使用link分割)
        2) 在css中增加媒体查询
            @media screen and (min-device-width: 481px) {

            }
            @media print {}



    
html 元素
    <aside>
    <button>
    <a>
    <q>
    <blockquote>
    <p>
    <img>
    <em>
    <strong>
    <time>
    <ul>
    <ol>
    <li>
    <pre> 按输入的方式原样显示文本
    <code> 显示计算机程序代码
    <br>
    <del>
    <ins>

属性
    placeholder 输入提示
        

css 样式

    背景
        background-color
        background-image:url(images/background.gif); //url两边不需要加引号
            background-position:px|%|关键字（top,left,right,bottom,center）;设置图像位置，如top left表示图像放在元素的左上角
            background-repeat:no-repeat|repeat-x|repeat-y|inherit; //设置平铺行为

    文本和字体
        color
        font-family:Verdana, Geneva, Arial, sans-serif;(指定候选字体，最后再加上通用字体, 如sans-serif)
        font-style:italic(斜体风格，衬线有弯曲)|oblique(倾斜文本)
        font-size: 15px|small
        font-weight:lighter|normal|bold|bolder
        text-decoration:underline|overline|line-throuht|none (文本装饰；可以同时设置两个值，中间用空格隔开)
        line-height:px|%|em;
        letter-spacing 字母之间设置间距
        list-style 设置列表项的外观
        
    对齐
        text-align
        vertical-align

        
    盒模型
        padding 上 右 下 左
        margin:auto(自动居中)
        border
        border-radius:px|em; 边框圆角
        border-color
        border-width：5px|think|medium|thick;
        border-style:solid|dotted(虚线)|dashed(破折线)|double(双线)|groove(槽线)|inset(内凹)|outset(外凸)|ridge(脊线)
        border-bottom 控制元素下边框的外观
        border-bottom-style

    布局
        display: talbe|tableRow|talbeCell;

        
    位置
        left 指定元素左边位置
        top  指定元素顶部位置
